---
import type { CollectionEntry } from 'astro:content';
import BaseLayout from './BaseLayout.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, cover, tags, author, excerpt } = Astro.props;
const displayImage = cover || heroImage;
---

<BaseLayout title={title} description={excerpt || description} article={true}>
  <header class="bg-gradient-to-b from-gray-50 to-white dark:from-gray-800 dark:to-gray-900 py-4">
    <nav class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex items-center justify-between h-16">
        <a href="/" class="text-2xl font-bold text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
          My Blog
        </a>
        <div class="flex items-center space-x-6">
          <a href="/blog/1" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
            文章
          </a>
          <a href="/about" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
            關於
          </a>
          <button
            id="theme-toggle"
            type="button"
            class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5"
          >
            <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
            </svg>
            <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
            </svg>
          </button>
        </div>
      </div>
    </nav>
  </header>

  <main class="flex-grow">
    <article class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
      {displayImage && (
        <div class="mb-8 -mx-4 sm:-mx-6 lg:-mx-8">
          <Image 
            class="w-full h-[400px] object-cover"
            width={1200} 
            height={400} 
            src={displayImage} 
            alt={title}
          />
        </div>
      )}
      
      <div class="max-w-4xl mx-auto">
        <header class="mb-8">
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
            {title}
          </h1>
          
          <div class="flex flex-wrap items-center text-sm text-gray-600 dark:text-gray-400 gap-4">
            <div class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              <FormattedDate date={pubDate} />
            </div>
            
            <div class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <span>{author}</span>
            </div>
            
            {updatedDate && (
              <div class="flex items-center text-xs">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                </svg>
                更新於 <FormattedDate date={updatedDate} />
              </div>
            )}
          </div>
          
          {tags && tags.length > 0 && (
            <div class="mt-4 flex flex-wrap gap-2">
              {tags.map((tag) => (
                <span 
                  class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200"
                >
                  #{tag}
                </span>
              ))}
            </div>
          )}
        </header>

        <div class="prose prose-lg dark:prose-invert max-w-none prose-headings:scroll-mt-20 prose-img:rounded-lg prose-a:text-blue-600 dark:prose-a:text-blue-400">
          <slot />
        </div>
      </div>
    </article>
  </main>

  <footer class="bg-gray-50 dark:bg-gray-800 mt-16">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="text-center text-gray-600 dark:text-gray-400">
        <p>&copy; {new Date().getFullYear()} My Blog. Built with Astro & MDX.</p>
      </div>
    </div>
  </footer>

  <script>
    const themeToggle = document.getElementById('theme-toggle');
    const darkIcon = document.getElementById('theme-toggle-dark-icon');
    const lightIcon = document.getElementById('theme-toggle-light-icon');

    // 初始化圖標顯示
    if (localStorage.getItem('theme') === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      lightIcon?.classList.remove('hidden');
    } else {
      darkIcon?.classList.remove('hidden');
    }

    themeToggle?.addEventListener('click', function() {
      // 切換深色模式
      document.documentElement.classList.toggle('dark');
      
      // 切換圖標
      if (darkIcon?.classList.contains('hidden')) {
        darkIcon.classList.remove('hidden');
        lightIcon?.classList.add('hidden');
        localStorage.setItem('theme', 'light');
      } else {
        lightIcon?.classList.remove('hidden');
        darkIcon?.classList.add('hidden');
        localStorage.setItem('theme', 'dark');
      }
    });
  </script>
</BaseLayout>