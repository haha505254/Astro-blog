---
import Navigation from '../components/Navigation.astro';

export interface Props {
  title: string;
  description?: string;
  image?: string;
  article?: boolean;
}

const { title, description = '一個使用 Astro + MDX 建立的現代化部落格', image = '/default-og-image.png', article = false, publishedTime, modifiedTime, author = 'Lin', tags = [] } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const siteUrl = Astro.site || 'https://elaborate-alfajores-21aa14.netlify.app';
---

<!DOCTYPE html>
<html lang="zh-TW" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Additional SEO Meta Tags -->
    <meta name="author" content={author} />
    <meta name="robots" content="index, follow" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={article ? 'article' : 'website'} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />
    <meta property="og:site_name" content="Lin's Murmur" />
    <meta property="og:locale" content="zh_TW" />
    {article && publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {article && modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    {article && author && <meta property="article:author" content={author} />}
    {article && tags.length > 0 && tags.map(tag => <meta property="article:tag" content={tag} />)}
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />
    
    <!-- 深色模式腳本 -->
    <script is:inline>
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
      
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
      window.localStorage.setItem('theme', theme);
    </script>
    
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": article ? "BlogPosting" : "WebSite",
      ...(article ? {
        "headline": title,
        "description": description,
        "author": {
          "@type": "Person",
          "name": author
        },
        "datePublished": publishedTime,
        "dateModified": modifiedTime || publishedTime,
        "image": new URL(image, siteUrl).toString(),
        "publisher": {
          "@type": "Organization",
          "name": "Lin's Murmur",
          "logo": {
            "@type": "ImageObject",
            "url": new URL('/favicon.svg', siteUrl).toString()
          }
        },
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": canonicalURL.toString()
        },
        "keywords": tags.join(', ')
      } : {
        "name": "Lin's Murmur",
        "description": description,
        "url": siteUrl,
        "potentialAction": {
          "@type": "SearchAction",
          "target": {
            "@type": "EntryPoint",
            "urlTemplate": siteUrl + "/search?q={search_term_string}"
          },
          "query-input": "required name=search_term_string"
        }
      })
    })} />
    
    <slot name="head" />
    
    <script is:inline src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
  </head>
  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300">
    <div class="min-h-screen flex flex-col">
      <Navigation />
      <slot />
    </div>
  </body>
</html>