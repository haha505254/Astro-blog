---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from 'astro:assets';

// 獲取所有文章並過濾草稿
const allPosts = await getCollection('blog');
const posts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// 計算閱讀時間（粗略估計）
function calculateReadingTime(content: string): number {
  const wordsPerMinute = 200;
  const wordCount = content.split(/\s+/).length;
  return Math.ceil(wordCount / wordsPerMinute);
}
---

<BaseLayout title="部落格文章" description="探索我們的最新文章和想法">
  <header class="bg-gradient-to-b from-gray-50 to-white dark:from-gray-800 dark:to-gray-900 py-4">
    <nav class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex items-center justify-between h-16">
        <a href="/" class="text-2xl font-bold text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
          My Blog
        </a>
        <div class="flex items-center space-x-6">
          <a href="/blog" class="text-blue-600 dark:text-blue-400 font-medium">
            文章
          </a>
          <a href="/tags" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
            標籤
          </a>
          <a href="/about" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
            關於
          </a>
          <button
            id="theme-toggle"
            type="button"
            class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5"
          >
            <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
            </svg>
            <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
            </svg>
          </button>
        </div>
      </div>
    </nav>
  </header>

  <main class="flex-grow">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="text-center mb-12">
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
          部落格文章
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-400">
          探索最新的技術文章、教學和心得分享
        </p>
      </div>

      <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3 max-w-7xl mx-auto">
        {posts.map((post, index) => {
          const displayImage = post.data.cover || post.data.heroImage;
          const isFirstPost = index === 0;
          
          return (
            <article class={`group ${isFirstPost ? 'md:col-span-2 lg:col-span-3' : ''}`}>
              <a href={`/blog/${post.id}/`} class="block">
                <div class={`bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 overflow-hidden ${isFirstPost ? 'md:flex' : ''}`}>
                  {displayImage && (
                    <div class={`relative overflow-hidden ${isFirstPost ? 'md:w-1/2' : ''}`}>
                      <Image 
                        class={`w-full object-cover group-hover:scale-105 transition-transform duration-300 ${isFirstPost ? 'h-full' : 'h-48'}`}
                        width={isFirstPost ? 800 : 400} 
                        height={isFirstPost ? 400 : 200} 
                        src={displayImage} 
                        alt={post.data.title}
                      />
                      {post.data.category && (
                        <span class="absolute top-4 left-4 bg-blue-600 text-white px-3 py-1 rounded-full text-sm font-medium">
                          {post.data.category}
                        </span>
                      )}
                    </div>
                  )}
                  <div class={`p-6 ${isFirstPost ? 'md:w-1/2' : ''}`}>
                    <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2">
                      <FormattedDate date={post.data.pubDate} />
                      <span class="mx-2">·</span>
                      <span>{post.data.author || 'Anonymous'}</span>
                    </div>
                    
                    <h2 class={`font-bold text-gray-900 dark:text-white mb-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors ${isFirstPost ? 'text-2xl md:text-3xl' : 'text-xl'}`}>
                      {post.data.title}
                    </h2>
                    
                    <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-3">
                      {post.data.excerpt || post.data.description}
                    </p>
                    
                    {post.data.tags && post.data.tags.length > 0 && (
                      <div class="flex flex-wrap gap-2">
                        {post.data.tags.slice(0, 3).map((tag) => (
                          <span class="text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 px-2 py-1 rounded">
                            #{tag}
                          </span>
                        ))}
                        {post.data.tags.length > 3 && (
                          <span class="text-xs text-gray-500 dark:text-gray-400">
                            +{post.data.tags.length - 3} more
                          </span>
                        )}
                      </div>
                    )}
                  </div>
                </div>
              </a>
            </article>
          );
        })}
      </div>

      {posts.length === 0 && (
        <div class="text-center py-12">
          <p class="text-gray-600 dark:text-gray-400 text-lg">
            目前還沒有發布任何文章。
          </p>
        </div>
      )}
    </div>
  </main>

  <footer class="bg-gray-50 dark:bg-gray-800 mt-16">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="text-center text-gray-600 dark:text-gray-400">
        <p>&copy; {new Date().getFullYear()} My Blog. Built with Astro & MDX.</p>
      </div>
    </div>
  </footer>

  <script>
    const themeToggle = document.getElementById('theme-toggle');
    const darkIcon = document.getElementById('theme-toggle-dark-icon');
    const lightIcon = document.getElementById('theme-toggle-light-icon');

    // 初始化圖標顯示
    if (localStorage.getItem('theme') === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      lightIcon?.classList.remove('hidden');
    } else {
      darkIcon?.classList.remove('hidden');
    }

    themeToggle?.addEventListener('click', function() {
      // 切換深色模式
      document.documentElement.classList.toggle('dark');
      
      // 切換圖標
      if (darkIcon?.classList.contains('hidden')) {
        darkIcon.classList.remove('hidden');
        lightIcon?.classList.add('hidden');
        localStorage.setItem('theme', 'light');
      } else {
        lightIcon?.classList.remove('hidden');
        darkIcon?.classList.add('hidden');
        localStorage.setItem('theme', 'dark');
      }
    });
  </script>
</BaseLayout>